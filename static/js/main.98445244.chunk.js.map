{"version":3,"sources":["components/ProductDetails.js","components/Payment.js","App.js","reportWebVitals.js","index.js"],"names":["ProductDetails","Col","md","Form","Group","Label","Date","toString","CARD_TYPE_LENGTH","Visa","JCB","Amex","MasterCard","CardType","parentSetCardType","setCardType","useState","cardType","useEffect","axios","get","then","data","cardTypes","Control","as","onChange","value","target","map","id","PaymentSubmitted","setData","response","style","backgroundColor","responseCode","responseMessage","invoiceNo","approvalCode","Payment","cardNumber","setCardNumber","expireNumber","setExpireNumber","name","setName","email","setEmail","submitEnable","setSubmitEnable","isPaymentSubmitted","setSubmitPayment","length","isNaN","Number","includes","type","placeholder","maxLength","Button","onClick","event","preventDefault","disabled","App","Row","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98445244.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Form } from \"react-bootstrap\";\n\n// Dummy product details\nexport default function ProductDetails() {\n  return (\n    <Col md>\n      <Form.Group>\n        <Form.Label>Product: </Form.Label>\n        <Form.Label>Apple Iphone 12</Form.Label>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Date : </Form.Label>\n        <Form.Label>{new Date().toString()}</Form.Label>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Amount : </Form.Label>\n        <Form.Label> 1520 $</Form.Label>\n      </Form.Group>\n    </Col>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\n// Card type and its digit length\nconst CARD_TYPE_LENGTH = {\n  Visa: 10,\n  JCB: 16,\n  Amex: 20,\n  MasterCard: 21,\n};\n// Cards Element render\nfunction CardType({ setCardType: parentSetCardType }) {\n  const [cardType, setCardType] = useState([]);\n\n  function onCardChange({ target: { value } }) {\n    parentSetCardType(value);\n  }\n  useEffect(() => {\n    // on mount calling api and fetching card types.\n    axios\n      .get(\"http://www.mocky.io/v2/5d145fa22f0000ff3ec4f030\")\n      .then((data) => {\n        setCardType(data.data.cardTypes);\n      });\n  }, []);\n\n  return (\n    <Form.Group>\n      <Form.Control as=\"select\" onChange={onCardChange}>\n        {cardType.map(({ id, value }) => {\n          return <option key={id}>{value}</option>;\n        })}\n      </Form.Control>\n    </Form.Group>\n  );\n}\n\nfunction PaymentSubmitted() {\n  const [data, setData] = useState({});\n  useEffect(() => {\n    // once payment submitted, get reciept and show result\n    axios\n      .get(\"http://www.mocky.io/v2/5d8de422310000b19d2b517a\")\n      .then((response) => {\n        setData(response.data);\n      });\n  }, []);\n\n  return !data ? (\n    <h1>....loading</h1>\n  ) : (\n    <Col\n      md\n      style={{\n        backgroundColor: \"#7693e4\",\n      }}\n    >\n      <Form.Group>\n        <Form.Label>responseCode: </Form.Label>\n        <Form.Label>{data.responseCode}</Form.Label>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>responseMessage : </Form.Label>\n        <Form.Label>{data.responseMessage}</Form.Label>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>invoiceNo : </Form.Label>\n        <Form.Label> {data.invoiceNo}</Form.Label>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>approvalCode : </Form.Label>\n        <Form.Label> {data.approvalCode}</Form.Label>\n      </Form.Group>\n    </Col>\n  );\n}\n\nfunction Payment() {\n  const [cardType, setCardType] = useState(\"Visa\");\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expireNumber, setExpireNumber] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [submitEnable, setSubmitEnable] = useState(true);\n  const [isPaymentSubmitted, setSubmitPayment] = useState(false);\n  useEffect(checkButtonState, [\n    cardType,\n    cardNumber,\n    expireNumber,\n    name,\n    email,\n  ]);\n  function onNameChange({ target: { value } }) {\n    setName(value);\n  }\n\n  function onCardNumberChange({ target: { value } }) {\n    setCardNumber(value);\n  }\n\n  function onDateChange({ target: { value } }) {\n    setExpireNumber(value);\n  }\n\n  function onEmailChange({ target: { value } }) {\n    setEmail(value);\n  }\n\n  function onSubmit(event) {\n    event.preventDefault();\n    setSubmitPayment(true);\n  }\n\n  function checkButtonState() {\n    // check if data is filled for some inputs\n    if (cardNumber.length && expireNumber.length && name.length) {\n      if (\n        // if data is correct format or not\n        !isNaN(Number(cardNumber)) &&\n        CARD_TYPE_LENGTH[cardType] === cardNumber.length &&\n        name.length > 0 &&\n        expireNumber.includes(\"-\")\n      ) {\n        if (email.length) {// if email id given, check for format\n          if (email.includes(\"@\") && email.includes(\".com\")) {\n            setSubmitEnable(false);\n          } else {\n            setSubmitEnable(true);\n          }\n        } else {\n          setSubmitEnable(false); // enable button\n        }\n      } else {\n        setSubmitEnable(true); // disable payment button\n      }\n    }\n  }\n\n  return isPaymentSubmitted ? (\n    <PaymentSubmitted />\n  ) : (\n    <Col md>\n      <Form>\n        <Form.Group>\n          <Form.Label>*Card type</Form.Label>\n          <CardType setCardType={setCardType} />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>*Card Number</Form.Label>\n          <Form.Control\n            type=\"number\"\n            placeholder=\"12345\"\n            onChange={onCardNumberChange}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>*Expire</Form.Label>\n          <Form.Control\n            type=\"month\"\n            placeholder=\"12345\"\n            onChange={onDateChange}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>*Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"XYZ\"\n            maxLength=\"50\"\n            onChange={onNameChange}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"name@example.com\"\n            onChange={onEmailChange}\n          />\n        </Form.Group>\n\n        <Button onClick={onSubmit} disabled={submitEnable}>\n          Confirm Payment\n        </Button>\n      </Form>\n    </Col>\n  );\n}\n\nexport default Payment;\n","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport \"./App.css\";\n\nimport { ProductDetails, Payment } from \"./components\";\n\nclass App extends React.Component {\n  render() {\n    return (\n        <Row>\n          <ProductDetails />\n          <Payment />\n        </Row>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}